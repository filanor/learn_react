{"version":3,"sources":["components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/errorMessage.js","components/errorMessage/index.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/charDetails/charDetails.js","components/charDetails/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","GotService","Object","classCallCheck","this","_apiBase","url","fetch","concat","res","ok","message","status","json","getResource","map","_transformCharacter","id","character","_transformBook","book","_transformHouse","house","char","name","length","gender","born","died","culture","region","words","title","overlord","ancestraWeapons","numberOfPages","publiser","released","Spinner","className","ErrPic","img","errorMessage_templateObject","ErrorMessage","_ref","_errDictionary$status","404","msg","pic","410","408","react","src","process","alt","RandomBlock","randomChar_templateObject","RandomChar","state","loading","error","errorStatus","gotService","onCharLoaded","_this","setState","onError","updateChar","Math","floor","random","getCharacter","then","catch","temerId","setInterval","clearInterval","timerId","console","log","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","ListGroup","flush","ListGroupItem","ItemsBlock","itemList_templateObject","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetail","charDetails_templateObject","CharDetails","prevProps","charId","foo","bar","_this$state$char","App","randomChar","selectedChar","toggleRandomChar","showRandomChar","Row","Col","lg","size","offset","components_randomChar","Fragment","Container","components_header","md","itemList","charDetails","Button","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.12d05238.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n \nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","//  Создаем сетевой сервис для нашего приложения на основе API игры престолов https://anapioficeandfire.com/\n\nexport default class GotService {\n\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n    }\n\n    async getResource(url){\n        const res = await fetch(`${this._apiBase}${url}`);\n    \n        if(!res.ok) {\n            //throw new Error({message:`Could not fetch ${url}, status ${res.status}`, status: res.status})\n            throw ( {message: `Could not fetch ${url}, status ${res.status}`, status: res.status} );\n        }\n        \n        return await res.json();      \n    };\n    async getAllCharacters() {\n        const res = await this.getResource('/characters?page=5&pageSize=10');\n        return res.map(this._transformCharacter);\n    }\n    async getCharacter(id) {\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n    async getAllBooks() {\n        const res = await this.getResource('/books');\n        return res.map(this._transformBook);\n    }\n    async getBook(id) {\n        const book = await this.getResource(`/books/${id}`);\n        return this._transformBook(book);\n    }\n    async getAllHauses() {\n        const res = await this.getResource('/houses');\n        return res.map(this._transformHouse)\n    }\n    async getHause(id) {\n        const house = await this.getResource(`/houses/${id}`);\n        return this._transformHouse(house)\n    }\n\n    _transformCharacter(char){\n        return {\n            name: char.name.length > 0 ? char.name : 'unknown',\n            gender: char.gender.length > 0 ? char.gender : 'unknown', \n            born: char.born.length > 0 ? char.born : 'unknown', \n            died: char.died.length > 0 ? char.died : 'unknown',\n            culture: char.culture.length > 0 ? char.culture : 'unknown'\n        }\n    } \n\n    _transformHouse(house){\n        return {\n            name: house.name.length > 0 ? house.name : 'unknown',\n            region: house.region.length > 0 ? house.region : 'unknown', \n            words: house.words.length > 0 ? house.words : 'unknown', \n            title: house.title.length > 0 ? house.title : 'unknown',\n            overlord: house.overlord.length > 0 ? house.overlord : 'unknown',\n            ancestraWeapons: house.ancestraWeapons.length > 0 ? house.ancestraWeapons : 'unknown'\n        }\n    } \n\n    _transformBook(book){\n        return {\n            name: book.name.length > 0 ? book.name : 'unknown',\n            numberOfPages: book.numberOfPages.length > 0 ? book.numberOfPages : 'unknown', \n            publiser: book.publiser.length > 0 ? book.publiser : 'unknown', \n            released: book.released.length > 0 ? book.released : 'unknown',\n        }\n    } \n}\n","import Spinner from './spinner'\nexport default Spinner;","import React from 'react';\nimport './spinner.css'\n\nconst Spinner = () => {\n    return(\n        <div className=\"lds-css ng-scope\">\n            <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React, {Fragment, Component} from 'react';\nimport styled from 'styled-components';\n\nconst ErrPic = styled.img`\n    max-width: 100%;\n`;\n\n// export default class ErrorBoundary extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             error: false,\n//         }\n//     }\n//     static getDerivedStateFromError(error) {\n//         return {error: true}\n//     }\n    \n    \n//     render() {\n//         if (this.state.error) {\n//             return(  \n//                 <div>\n//                     { <ErrPic src = {process.env.PUBLIC_URL + 'img/error.jpg'} alt = 'error'></ErrPic> }\n\n//                     <span>Somethin goes wrong</span>\n//                 </div>          \n//             );\n//         }\n//         return this.props.children;\n//     }\n// }\n\nconst ErrorMessage = ({status}) => {\n    const errDictionary = {\n                404: {msg:'Somethin goes wrong', pic: 'img/error.jpg'}, \n                410: {msg: 'we are broken', pic: 'img/ruins.jpg'},\n                408: {msg: 'we waiting too long..', pic:'img/time.jpg'}\n            };\n\n    const {msg, pic} = errDictionary[status];\n    return(\n        <Fragment>\n            {/** Допустим нам необходимо подгрузить файл, находящийся в папке pulic. Для этого используется следующая конструкци: */}\n            <ErrPic src = {process.env.PUBLIC_URL + pic} alt = 'error'></ErrPic>\n\n            <span>{msg}</span>\n        </Fragment>\n    );\n}\n\nexport default ErrorMessage;\n","import ErrorMessage from './errorMessage';\nexport default ErrorMessage;","import React, {Component, Fragment} from 'react';\nimport GotService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\nimport styled from 'styled-components';\nimport ErrorMessage from '../errorMessage';\n\nconst RandomBlock = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px; \n    margin-bottom: 40px;\n    border-radius: 0.25rem !important;\n    h4{\n        margin-bottom: 20px;\n        text-align: center;\n    }\n    li{\n        display: flex;\n        justify-content: space-between !important;\n    }import ErrorBoundary from '../errorMessage/errorMessage';\n\n`\n\nexport default class RandomChar extends Component {\n    // constructor(){\n    //     super();\n    //     this.updateChar();\n    //     this.temerId = setInterval(this.updateChar, 1500) // обновление рандомного персонажа каждые 1.5 секунды (так как здесь используем контекст\n    //     // вызова, необходимо updateChar сделать стрелочной)\n        \n    //     console.log('constructor')\n    // }\n\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n        errorStatus: ''\n    }\n\n    gotService = new GotService();\n\n    componentDidMount() {\n        this.updateChar();\n        this.temerId = setInterval(this.updateChar, 1500) \n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId); \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            errorStatus: ''\n        })\n    }\n\n    onError = (status) => {\n        this.setState({\n            error: true,\n            errorStatus: status,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 140 + 25); // рандомный id персонажа ()\n       //const id = 12342341234;\n        this.gotService.getCharacter(id) // возвращает промис\n            .then( this.onCharLoaded)\n            .catch((error) => {\n                this.onError(error.status);});\n    }\n\n    render() {\n        console.log('render');\n        const {char, loading, error, errorStatus} = this.state;\n        \n        const errorMessage = error ? <ErrorMessage status = {errorStatus}/> : null;\n         // Если статуc loadin, то в переменной spinner будет загрузочный блок, иначе 0\n        const spinner = loading ? <Spinner/> : null;\n\n        const content = !(loading || errorMessage) ? <View char = {char}/> : null;       \n        \n        \n\n        return (\n            <RandomBlock>\n                {errorMessage}\n                {spinner}\n                {content}\n            </RandomBlock>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <Fragment>\n            \n             <h4>Random Character: {name}</h4>\n                <ListGroup flush>\n                    <ListGroupItem>\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <span className=\"term\">Born </span>\n                        <span>{born}</span>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <span className=\"term\">Died </span>\n                        <span>{died}</span>\n                    </ListGroupItem>\n                    <ListGroupItem>\n                        <span className=\"term\">Culture </span>\n                        <span>{culture}</span>\n                    </ListGroupItem>\n                </ListGroup>\n\n            \n        </Fragment>\n    );\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, {Component} from 'react';\nimport GotService from '../../services/gotService';\nimport Spinner from '../spinner/';\nimport {ListGroupItem} from 'reactstrap';\nimport styled from 'styled-components';\n\nconst ItemsBlock = styled.ul`\n    li{\n        cursor: pointer;\n    }\n`\n\nexport default class ItemList extends Component {\n    gotService = new GotService();\n    state = {\n        charList: null\n    }\n    \n    componentDidMount(){\n        this.gotService.getAllCharacters()\n            .then( (charList) => {\n                this.setState({\n                    charList\n                })\n            })\n    };\n\n    renderItems(arr) {\n        return arr.map( (item, i) => {\n            return(\n                <ListGroupItem\n                    key = {i}\n                    onClick = {() => this.props.onCharSelected(41 + i)} // (5 сраница)\n                    >\n                    {item.name}\n                </ListGroupItem>\n            )\n        })\n    }\n\n\n    render() {\n\n        const {charList} = this.state;\n\n        if(!charList){\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList)\n\n        return (\n            <ItemsBlock className=\"list-group\">\n                {items}\n            </ItemsBlock>\n        );\n    }\n}","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport GotService from '../../services/gotService';\nimport styled from 'styled-components';\nimport {ListGroup, ListGroupItem} from 'reactstrap'\n\n\nconst  CharDetail = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px;\n    margin-bottom: 40px;\n    h4{\n        margin-bottom: 20px;\n        text-align: center;\n    }\n    li{\n        display: flex;\n    }\n`;\nexport default class CharDetails extends Component {\n    gotService = new GotService();\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar(); // Всегда стоить делать проверку новых и прошлых пропсов иначе получится бесконечный цикл\n        }\n    }\n\n    updateChar() {\n        const {charId} = this.props;\n        if(!charId) {\n            return\n        }\n        this.gotService.getCharacter(charId)\n            .then( (char) => {\n                this.setState({char})\n            })\n        this.foo.bar = 0;\n    }\n\n    render() {\n        if(!this.state.char) {\n            return <span className = \"select-error\">Please select a character</span>\n        }\n        const {name, gender, born, died, culture} = this.state.char\n        return (\n            <CharDetail className=\"rounded\">\n                <h4>{name}</h4>\n                <ListGroup flush>\n                    <ListGroupItem className=\"justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </ListGroupItem>\n                    <ListGroupItem className=\"justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </ListGroupItem>\n                    <ListGroupItem className=\"justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </ListGroupItem>\n                    <ListGroupItem className=\"justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </ListGroupItem>\n                </ListGroup>\n            </CharDetail>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import App from './app';\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Button, Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\n\n\n\nexport default class App extends Component{\n    state = {\n        randomChar: true,\n        selectedChar: 130\n    }\n\n    toggleRandomChar = () => {\n        this.setState({\n            randomChar: !this.state.randomChar\n        });\n    }\n    showRandomChar = () => {\n        return(\n            <Row>\n                <Col lg={{size: 5, offset: 0}}>\n                    <RandomChar/>\n                </Col>\n            </Row> \n        )\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        const randomChar = this.state.randomChar ? this.showRandomChar() : null;\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    \n                    {randomChar}\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected = {this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId = {this.state.selectedChar}/>\n                        </Col>\n                    </Row>\n                    <Button onClick = {this.toggleRandomChar}>Toggle Random Character</Button>\n                </Container>\n            </>\n        );\n    }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}